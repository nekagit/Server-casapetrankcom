---
import Layout from '../../layouts/Layout.astro';
---

<Layout 
  title="Registrieren - Casa Petrada"
  description="Erstelle dein Casa Petrada Konto und entdecke handgefertigten Boho Schmuck."
>
  <!-- Breadcrumb -->
  <section class="py-4 bg-boho-light border-b border-boho-accent">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <nav class="flex items-center space-x-2 text-sm">
        <a href="/" class="text-boho-dark hover:text-boho-pink transition-colors">Home</a>
        <span class="text-boho-dark/60">/</span>
        <span class="text-boho-dark/60">Registrieren</span>
      </nav>
    </div>
  </section>

  <!-- Registration Form -->
  <section class="py-12">
    <div class="max-w-md mx-auto px-4 sm:px-6 lg:px-8">
      <div class="bg-white rounded-lg shadow-sm border border-boho-accent/20 p-8">
        <!-- Header -->
        <div class="text-center mb-8">
          <h1 class="text-2xl font-serif font-bold text-boho-dark mb-2">Konto erstellen</h1>
          <p class="text-boho-dark/70">Erstelle dein Konto und entdecke unsere handgefertigten Schmuckstücke</p>
        </div>

        <!-- Registration Form -->
        <form id="register-form" class="space-y-6">
          <!-- Personal Information -->
          <div class="grid grid-cols-2 gap-4">
            <div>
              <label for="firstName" class="block text-sm font-medium text-boho-dark mb-2">Vorname *</label>
              <input 
                type="text" 
                id="firstName" 
                name="firstName" 
                required
                class="w-full px-3 py-2 border border-boho-accent rounded-lg focus:ring-2 focus:ring-boho-pink focus:border-boho-pink"
                placeholder="Max"
              />
              <div class="error-message hidden text-red-600 text-sm mt-1"></div>
            </div>
            <div>
              <label for="lastName" class="block text-sm font-medium text-boho-dark mb-2">Nachname *</label>
              <input 
                type="text" 
                id="lastName" 
                name="lastName" 
                required
                class="w-full px-3 py-2 border border-boho-accent rounded-lg focus:ring-2 focus:ring-boho-pink focus:border-boho-pink"
                placeholder="Mustermann"
              />
              <div class="error-message hidden text-red-600 text-sm mt-1"></div>
            </div>
          </div>

          <!-- Email -->
          <div>
            <label for="email" class="block text-sm font-medium text-boho-dark mb-2">E-Mail-Adresse *</label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              required
              class="w-full px-3 py-2 border border-boho-accent rounded-lg focus:ring-2 focus:ring-boho-pink focus:border-boho-pink"
              placeholder="max@mustermann.de"
            />
            <div class="error-message hidden text-red-600 text-sm mt-1"></div>
          </div>

          <!-- Phone -->
          <div>
            <label for="phone" class="block text-sm font-medium text-boho-dark mb-2">Telefonnummer (optional)</label>
            <input 
              type="tel" 
              id="phone" 
              name="phone"
              class="w-full px-3 py-2 border border-boho-accent rounded-lg focus:ring-2 focus:ring-boho-pink focus:border-boho-pink"
              placeholder="+49 123 456789"
            />
            <div class="error-message hidden text-red-600 text-sm mt-1"></div>
          </div>

          <!-- Password -->
          <div>
            <label for="password" class="block text-sm font-medium text-boho-dark mb-2">Passwort *</label>
            <div class="relative">
              <input 
                type="password" 
                id="password" 
                name="password" 
                required
                class="w-full px-3 py-2 border border-boho-accent rounded-lg focus:ring-2 focus:ring-boho-pink focus:border-boho-pink pr-10"
                placeholder="Mindestens 8 Zeichen"
              />
              <button 
                type="button" 
                class="absolute inset-y-0 right-0 pr-3 flex items-center text-boho-dark/60 hover:text-boho-pink transition-colors"
                id="toggle-password"
              >
                <i class="fas fa-eye"></i>
              </button>
            </div>
            <div class="error-message hidden text-red-600 text-sm mt-1"></div>
            <div class="password-strength mt-2">
              <div class="flex items-center space-x-2 text-xs">
                <span class="text-boho-dark/70">Passwort-Stärke:</span>
                <div class="flex space-x-1">
                  <div class="w-2 h-2 bg-gray-300 rounded-full"></div>
                  <div class="w-2 h-2 bg-gray-300 rounded-full"></div>
                  <div class="w-2 h-2 bg-gray-300 rounded-full"></div>
                  <div class="w-2 h-2 bg-gray-300 rounded-full"></div>
                </div>
                <span class="password-strength-text text-boho-dark/70">Schwach</span>
              </div>
            </div>
          </div>

          <!-- Confirm Password -->
          <div>
            <label for="confirmPassword" class="block text-sm font-medium text-boho-dark mb-2">Passwort bestätigen *</label>
            <div class="relative">
              <input 
                type="password" 
                id="confirmPassword" 
                name="confirmPassword" 
                required
                class="w-full px-3 py-2 border border-boho-accent rounded-lg focus:ring-2 focus:ring-boho-pink focus:border-boho-pink pr-10"
                placeholder="Passwort wiederholen"
              />
              <button 
                type="button" 
                class="absolute inset-y-0 right-0 pr-3 flex items-center text-boho-dark/60 hover:text-boho-pink transition-colors"
                id="toggle-confirm-password"
              >
                <i class="fas fa-eye"></i>
              </button>
            </div>
            <div class="error-message hidden text-red-600 text-sm mt-1"></div>
          </div>

          <!-- Birthday -->
          <div>
            <label for="birthday" class="block text-sm font-medium text-boho-dark mb-2">Geburtsdatum (optional)</label>
            <input 
              type="date" 
              id="birthday" 
              name="birthday"
              class="w-full px-3 py-2 border border-boho-accent rounded-lg focus:ring-2 focus:ring-boho-pink focus:border-boho-pink"
            />
            <div class="error-message hidden text-red-600 text-sm mt-1"></div>
          </div>

          <!-- Newsletter -->
          <div>
            <label class="flex items-start">
              <input type="checkbox" name="newsletter" class="mt-1 mr-3" />
              <span class="text-sm text-boho-dark/70">
                Ich möchte den Casa Petrada Newsletter erhalten und über neue Produkte und Angebote informiert werden.
              </span>
            </label>
          </div>

          <!-- Terms and Conditions -->
          <div>
            <label class="flex items-start">
              <input type="checkbox" name="terms" required class="mt-1 mr-3" />
              <span class="text-sm text-boho-dark/70">
                Ich habe die <a href="/agb" class="text-boho-pink hover:text-boho-brown transition-colors">AGB</a> und 
                <a href="/datenschutz" class="text-boho-pink hover:text-boho-brown transition-colors">Datenschutzerklärung</a> gelesen und stimme zu. *
              </span>
            </label>
            <div class="error-message hidden text-red-600 text-sm mt-1"></div>
          </div>

          <!-- Submit Button -->
          <button 
            type="submit" 
            class="w-full bg-boho-pink text-white font-medium py-3 px-4 rounded-lg hover:bg-boho-brown transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
            id="register-btn"
          >
            <i class="fas fa-user-plus mr-2"></i>
            Konto erstellen
          </button>

          <!-- Social Registration -->
          <div class="mt-6">
            <div class="relative">
              <div class="absolute inset-0 flex items-center">
                <div class="w-full border-t border-boho-accent/20"></div>
              </div>
              <div class="relative flex justify-center text-sm">
                <span class="px-2 bg-white text-boho-dark/70">Oder mit</span>
              </div>
            </div>

            <div class="mt-6 grid grid-cols-2 gap-3">
              <button 
                type="button" 
                class="w-full inline-flex justify-center py-2 px-4 border border-boho-accent rounded-lg shadow-sm bg-white text-sm font-medium text-boho-dark hover:bg-boho-beige transition-colors"
                id="google-register"
              >
                <i class="fab fa-google text-red-500 mr-2"></i>
                Google
              </button>
              <button 
                type="button" 
                class="w-full inline-flex justify-center py-2 px-4 border border-boho-accent rounded-lg shadow-sm bg-white text-sm font-medium text-boho-dark hover:bg-boho-beige transition-colors"
                id="facebook-register"
              >
                <i class="fab fa-facebook text-blue-600 mr-2"></i>
                Facebook
              </button>
            </div>
          </div>

          <!-- Login Link -->
          <div class="text-center mt-6">
            <p class="text-sm text-boho-dark/70">
              Bereits ein Konto? 
              <a href="/auth/login" class="text-boho-pink hover:text-boho-brown transition-colors font-medium">
                Jetzt anmelden
              </a>
            </p>
          </div>
        </form>
      </div>

      <!-- Trust Signals -->
      <div class="mt-8 text-center">
        <div class="flex items-center justify-center space-x-6 text-sm text-boho-dark/70">
          <div class="flex items-center">
            <i class="fas fa-shield-alt text-boho-pink mr-2"></i>
            <span>Sichere Registrierung</span>
          </div>
          <div class="flex items-center">
            <i class="fas fa-lock text-boho-pink mr-2"></i>
            <span>SSL-Verschlüsselung</span>
          </div>
          <div class="flex items-center">
            <i class="fas fa-user-secret text-boho-pink mr-2"></i>
            <span>Datenschutz</span>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>

<style>
  .error-message {
    display: none;
  }

  .error-message.show {
    display: block;
  }

  .form-error {
    border-color: #ef4444 !important;
    box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.2) !important;
  }

  .loading {
    opacity: 0.6;
    pointer-events: none;
  }

  .loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    border: 2px solid var(--boho-pink);
    border-top: 2px solid transparent;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Password strength indicators */
  .password-strength .w-2.h-2 {
    transition: background-color 0.3s ease;
  }

  .password-strength.weak .w-2.h-2:nth-child(1) {
    background-color: #ef4444;
  }

  .password-strength.fair .w-2.h-2:nth-child(-n+2) {
    background-color: #f59e0b;
  }

  .password-strength.good .w-2.h-2:nth-child(-n+3) {
    background-color: #10b981;
  }

  .password-strength.strong .w-2.h-2 {
    background-color: #10b981;
  }

  /* Focus styles for accessibility */
  input:focus,
  button:focus {
    outline: 2px solid var(--boho-pink);
    outline-offset: 2px;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .grid-cols-2 {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    .grid-cols-2.gap-3 {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  // Registration form functionality
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('register-form');
    const firstNameInput = document.getElementById('firstName');
    const lastNameInput = document.getElementById('lastName');
    const emailInput = document.getElementById('email');
    const phoneInput = document.getElementById('phone');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const birthdayInput = document.getElementById('birthday');
    const termsCheckbox = document.querySelector('input[name="terms"]');
    const togglePasswordBtn = document.getElementById('toggle-password');
    const toggleConfirmPasswordBtn = document.getElementById('toggle-confirm-password');
    const registerBtn = document.getElementById('register-btn');
    const googleRegisterBtn = document.getElementById('google-register');
    const facebookRegisterBtn = document.getElementById('facebook-register');

    // Password visibility toggles
    if (togglePasswordBtn) {
      togglePasswordBtn.addEventListener('click', function() {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        
        const icon = this.querySelector('i');
        icon.classList.toggle('fa-eye');
        icon.classList.toggle('fa-eye-slash');
      });
    }

    if (toggleConfirmPasswordBtn) {
      toggleConfirmPasswordBtn.addEventListener('click', function() {
        const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        confirmPasswordInput.setAttribute('type', type);
        
        const icon = this.querySelector('i');
        icon.classList.toggle('fa-eye');
        icon.classList.toggle('fa-eye-slash');
      });
    }

    // Form validation functions
    function validateName(name) {
      return name.trim().length >= 2;
    }

    function validateEmail(email) {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return emailRegex.test(email);
    }

    function validatePhone(phone) {
      if (!phone) return true; // Optional field
      const phoneRegex = /^[\+]?[0-9\s\-\(\)]{10,}$/;
      return phoneRegex.test(phone);
    }

    function validatePassword(password) {
      return password.length >= 8;
    }

    function getPasswordStrength(password) {
      let strength = 0;
      if (password.length >= 8) strength++;
      if (/[a-z]/.test(password)) strength++;
      if (/[A-Z]/.test(password)) strength++;
      if (/[0-9]/.test(password)) strength++;
      if (/[^A-Za-z0-9]/.test(password)) strength++;
      
      if (strength < 2) return 'weak';
      if (strength < 3) return 'fair';
      if (strength < 4) return 'good';
      return 'strong';
    }

    function showFieldError(field, message) {
      field.classList.add('form-error');
      const errorDiv = field.parentNode.querySelector('.error-message');
      if (errorDiv) {
        errorDiv.textContent = message;
        errorDiv.classList.add('show');
      }
    }

    function clearFieldError(field) {
      field.classList.remove('form-error');
      const errorDiv = field.parentNode.querySelector('.error-message');
      if (errorDiv) {
        errorDiv.classList.remove('show');
        errorDiv.textContent = '';
      }
    }

    function updatePasswordStrength(password) {
      const strength = getPasswordStrength(password);
      const strengthContainer = document.querySelector('.password-strength');
      const strengthText = document.querySelector('.password-strength-text');
      
      if (strengthContainer) {
        strengthContainer.className = `password-strength mt-2 ${strength}`;
      }
      
      if (strengthText) {
        const strengthLabels = {
          weak: 'Schwach',
          fair: 'Mittel',
          good: 'Gut',
          strong: 'Stark'
        };
        strengthText.textContent = strengthLabels[strength];
      }
    }

    // Real-time validation
    firstNameInput.addEventListener('blur', function() {
      const name = this.value.trim();
      if (name && !validateName(name)) {
        showFieldError(this, 'Vorname muss mindestens 2 Zeichen lang sein');
      } else {
        clearFieldError(this);
      }
    });

    lastNameInput.addEventListener('blur', function() {
      const name = this.value.trim();
      if (name && !validateName(name)) {
        showFieldError(this, 'Nachname muss mindestens 2 Zeichen lang sein');
      } else {
        clearFieldError(this);
      }
    });

    emailInput.addEventListener('blur', function() {
      const email = this.value.trim();
      if (email && !validateEmail(email)) {
        showFieldError(this, 'Bitte geben Sie eine gültige E-Mail-Adresse ein');
      } else {
        clearFieldError(this);
      }
    });

    phoneInput.addEventListener('blur', function() {
      const phone = this.value.trim();
      if (phone && !validatePhone(phone)) {
        showFieldError(this, 'Bitte geben Sie eine gültige Telefonnummer ein');
      } else {
        clearFieldError(this);
      }
    });

    passwordInput.addEventListener('input', function() {
      const password = this.value;
      updatePasswordStrength(password);
      
      if (password && !validatePassword(password)) {
        showFieldError(this, 'Passwort muss mindestens 8 Zeichen lang sein');
      } else {
        clearFieldError(this);
      }
    });

    confirmPasswordInput.addEventListener('blur', function() {
      const password = passwordInput.value;
      const confirmPassword = this.value;
      
      if (confirmPassword && password !== confirmPassword) {
        showFieldError(this, 'Passwörter stimmen nicht überein');
      } else {
        clearFieldError(this);
      }
    });

    // Form submission
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const firstName = firstNameInput.value.trim();
      const lastName = lastNameInput.value.trim();
      const email = emailInput.value.trim();
      const phone = phoneInput.value.trim();
      const password = passwordInput.value;
      const confirmPassword = confirmPasswordInput.value;
      const terms = termsCheckbox.checked;
      
      // Clear previous errors
      [firstNameInput, lastNameInput, emailInput, phoneInput, passwordInput, confirmPasswordInput].forEach(clearFieldError);
      
      // Validate form
      let isValid = true;
      
      if (!firstName || !validateName(firstName)) {
        showFieldError(firstNameInput, 'Vorname ist erforderlich (mindestens 2 Zeichen)');
        isValid = false;
      }
      
      if (!lastName || !validateName(lastName)) {
        showFieldError(lastNameInput, 'Nachname ist erforderlich (mindestens 2 Zeichen)');
        isValid = false;
      }
      
      if (!email || !validateEmail(email)) {
        showFieldError(emailInput, 'Gültige E-Mail-Adresse ist erforderlich');
        isValid = false;
      }
      
      if (phone && !validatePhone(phone)) {
        showFieldError(phoneInput, 'Bitte geben Sie eine gültige Telefonnummer ein');
        isValid = false;
      }
      
      if (!password || !validatePassword(password)) {
        showFieldError(passwordInput, 'Passwort muss mindestens 8 Zeichen lang sein');
        isValid = false;
      }
      
      if (!confirmPassword || password !== confirmPassword) {
        showFieldError(confirmPasswordInput, 'Passwörter stimmen nicht überein');
        isValid = false;
      }
      
      if (!terms) {
        showFieldError(termsCheckbox, 'Bitte akzeptieren Sie die AGB und Datenschutzerklärung');
        isValid = false;
      }
      
      if (!isValid) {
        return;
      }
      
      // Show loading state
      registerBtn.classList.add('loading');
      registerBtn.disabled = true;
      
      // Simulate API call
      setTimeout(() => {
        // In a real app, this would make an API call to register
        console.log('Registration attempt:', { firstName, lastName, email, phone, password, terms });
        
        // Simulate successful registration
        const success = Math.random() > 0.2; // 80% success rate for demo
        
        if (success) {
          // Show success message
          showNotification('Konto erfolgreich erstellt! Willkommen bei Casa Petrada!', 'success');
          
          // Redirect to account page
          setTimeout(() => {
            window.location.href = '/account';
          }, 2000);
        } else {
          // Show error message
          showNotification('E-Mail-Adresse bereits registriert. Bitte verwenden Sie eine andere E-Mail-Adresse.', 'error');
          
          // Remove loading state
          registerBtn.classList.remove('loading');
          registerBtn.disabled = false;
        }
      }, 2000);
    });

    // Social registration
    if (googleRegisterBtn) {
      googleRegisterBtn.addEventListener('click', function() {
        // In a real app, this would initiate Google OAuth
        console.log('Google registration initiated');
        showNotification('Google Registrierung wird implementiert...', 'info');
      });
    }

    if (facebookRegisterBtn) {
      facebookRegisterBtn.addEventListener('click', function() {
        // In a real app, this would initiate Facebook OAuth
        console.log('Facebook registration initiated');
        showNotification('Facebook Registrierung wird implementiert...', 'info');
      });
    }

    // Show notification
    function showNotification(message, type = 'info') {
      const notification = document.createElement('div');
      notification.className = `fixed top-4 right-4 z-50 px-4 py-2 rounded-lg text-white ${
        type === 'success' ? 'bg-green-600' : 
        type === 'error' ? 'bg-red-600' : 
        'bg-boho-pink'
      }`;
      notification.textContent = message;
      
      document.body.appendChild(notification);
      
      setTimeout(() => {
        notification.remove();
      }, 3000);
    }

    // Auto-focus first name field
    firstNameInput.focus();
  });
</script>